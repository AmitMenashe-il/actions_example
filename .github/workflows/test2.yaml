name: Test

on:
  workflow_dispatch:
    inputs:
      deploy_cluster:
        description: 'Deploy the Kubernetes cluster for testing'
        required: true
        default: 'true'

jobs:
  setup_kubernetes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes cluster
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start
          
      
      - name: Install Helm chart
        run: |
         cd helm/task12
         helm install task1 .
         
      - name: Map Minikube IP to Hosts file for ingress
        run: |
          export MINIKUBE_IP=$(minikube ip)
          sudo echo "$MINIKUBE_IP minikubeip.com" | sudo tee -a /etc/hosts > /dev/null
          sudo echo "$MINIKUBE_IP notminikubeip.com" | sudo tee -a /etc/hosts > /dev/null
          
          #adding no ingress test
          export NODEPORT=$(kubectl get svc task1 -o=jsonpath='{.spec.ports[0].nodePort}')
                   
      - name: Wait for pod
        run: |
          while [[ $ready_pods -lt 1 ]]; do
            ready_pods=$(kubectl get deployment "task1" -o jsonpath='{.status.readyReplicas}')
            echo "Waiting for pods to be ready... (Ready pods: $ready_pods)"
            sleep 10
          done
      - name: Curl to the app
        run: |
          env | grep -E 'MINIKUBE_IP|NODEPORT'
          echo "running curl to ${MINIKUBE_IP}:${NODEPORT}"
          curl http://$MINIKUBE_IP:${NODEPORT}/
          curl http://minikubeip.com:${NODEPORT}/
          curl http://minikubeip.com:${NODEPORT}/healthcheck
          curl http://notminikubeip.com:${NODEPORT}/
